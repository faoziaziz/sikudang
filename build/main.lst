ARM GAS  /tmp/cc6prvUM.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB133:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V.
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice,
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/main.c    ****   *    and/or other materials provided with the distribution.
  24:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other
  25:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products
  26:Src/main.c    ****   *    derived from this software without specific written permission.
  27:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this
  28:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under
  31:Src/main.c    ****   *    this license is void and will automatically terminate your rights under
ARM GAS  /tmp/cc6prvUM.s 			page 2


  32:Src/main.c    ****   *    this license.
  33:Src/main.c    ****   *
  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS"
  35:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT
  36:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  37:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT
  39:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  42:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  43:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  44:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/main.c    ****   *
  47:Src/main.c    ****   ******************************************************************************
  48:Src/main.c    ****   */
  49:Src/main.c    **** /* USER CODE END Header */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  52:Src/main.c    **** #include "main.h"
  53:Src/main.c    **** #include "cmsis_os.h"
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  56:Src/main.c    **** /* USER CODE BEGIN Includes */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END Includes */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  61:Src/main.c    **** /* USER CODE BEGIN PTD */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PTD */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  66:Src/main.c    **** /* USER CODE BEGIN PD */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END PD */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  71:Src/main.c    **** /* USER CODE BEGIN PM */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE END PM */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  76:Src/main.c    **** osThreadId defaultTaskHandle;
  77:Src/main.c    **** osThreadId myTask02Handle;
  78:Src/main.c    **** /* USER CODE BEGIN PV */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE END PV */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  83:Src/main.c    **** void SystemClock_Config(void);
  84:Src/main.c    **** static void MX_GPIO_Init(void);
  85:Src/main.c    **** void StartDefaultTask(void const * argument);
  86:Src/main.c    **** void StartTask02(void const * argument);
  87:Src/main.c    **** 
  88:Src/main.c    **** /* USER CODE BEGIN PFP */
ARM GAS  /tmp/cc6prvUM.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    **** /* USER CODE END PFP */
  91:Src/main.c    **** 
  92:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  93:Src/main.c    **** /* USER CODE BEGIN 0 */
  94:Src/main.c    **** 
  95:Src/main.c    **** /* USER CODE END 0 */
  96:Src/main.c    **** 
  97:Src/main.c    **** /**
  98:Src/main.c    ****   * @brief  The application entry point.
  99:Src/main.c    ****   * @retval int
 100:Src/main.c    ****   */
 101:Src/main.c    **** int main(void)
 102:Src/main.c    **** {
 103:Src/main.c    ****   /* USER CODE BEGIN 1 */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE END 1 */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 110:Src/main.c    ****   HAL_Init();
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* USER CODE BEGIN Init */
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE END Init */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* Configure the system clock */
 117:Src/main.c    ****   SystemClock_Config();
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* USER CODE END SysInit */
 122:Src/main.c    **** 
 123:Src/main.c    ****   /* Initialize all configured peripherals */
 124:Src/main.c    ****   MX_GPIO_Init();
 125:Src/main.c    ****   /* USER CODE BEGIN 2 */
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* USER CODE END 2 */
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 130:Src/main.c    ****   /* add mutexes, ... */
 131:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 134:Src/main.c    ****   /* add semaphores, ... */
 135:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 136:Src/main.c    **** 
 137:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 138:Src/main.c    ****   /* start timers, add new ones, ... */
 139:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 140:Src/main.c    **** 
 141:Src/main.c    ****   /* Create the thread(s) */
 142:Src/main.c    ****   /* definition and creation of defaultTask */
 143:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 144:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 145:Src/main.c    **** 
ARM GAS  /tmp/cc6prvUM.s 			page 4


 146:Src/main.c    ****   /* definition and creation of myTask02 */
 147:Src/main.c    ****   osThreadDef(myTask02, StartTask02, osPriorityNormal, 0, 128);
 148:Src/main.c    ****   myTask02Handle = osThreadCreate(osThread(myTask02), NULL);
 149:Src/main.c    **** 
 150:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 151:Src/main.c    ****   /* add threads, ... */
 152:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 153:Src/main.c    **** 
 154:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 155:Src/main.c    ****   /* add queues, ... */
 156:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 157:Src/main.c    **** 
 158:Src/main.c    **** 
 159:Src/main.c    ****   /* Start scheduler */
 160:Src/main.c    ****   osKernelStart();
 161:Src/main.c    **** 
 162:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 163:Src/main.c    **** 
 164:Src/main.c    ****   /* Infinite loop */
 165:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 166:Src/main.c    ****   while (1)
 167:Src/main.c    ****   {
 168:Src/main.c    ****     /* USER CODE END WHILE */
 169:Src/main.c    **** 
 170:Src/main.c    ****     /* USER CODE BEGIN 3 */
 171:Src/main.c    ****   }
 172:Src/main.c    ****   /* USER CODE END 3 */
 173:Src/main.c    **** }
 174:Src/main.c    **** 
 175:Src/main.c    **** /**
 176:Src/main.c    ****   * @brief System Clock Configuration
 177:Src/main.c    ****   * @retval None
 178:Src/main.c    ****   */
 179:Src/main.c    **** void SystemClock_Config(void)
 180:Src/main.c    **** {
 181:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 182:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 183:Src/main.c    **** 
 184:Src/main.c    ****   /**Configure the main internal regulator output voltage
 185:Src/main.c    ****   */
 186:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 187:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 188:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 189:Src/main.c    ****   */
 190:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 191:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 192:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 193:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 194:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 195:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 196:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 199:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 200:Src/main.c    ****   {
 201:Src/main.c    ****     Error_Handler();
 202:Src/main.c    ****   }
ARM GAS  /tmp/cc6prvUM.s 			page 5


 203:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 204:Src/main.c    ****   */
 205:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 206:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 207:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 208:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 209:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 210:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 211:Src/main.c    **** 
 212:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 213:Src/main.c    ****   {
 214:Src/main.c    ****     Error_Handler();
 215:Src/main.c    ****   }
 216:Src/main.c    **** }
 217:Src/main.c    **** 
 218:Src/main.c    **** /**
 219:Src/main.c    ****   * @brief GPIO Initialization Function
 220:Src/main.c    ****   * @param None
 221:Src/main.c    ****   * @retval None
 222:Src/main.c    ****   */
 223:Src/main.c    **** static void MX_GPIO_Init(void)
 224:Src/main.c    **** {
  28              		.loc 1 224 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 87B0     		sub	sp, sp, #28
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 40
 225:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 225 3 view .LVU1
  42              		.loc 1 225 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0194     		str	r4, [sp, #4]
  45 0008 0294     		str	r4, [sp, #8]
  46 000a 0394     		str	r4, [sp, #12]
  47 000c 0494     		str	r4, [sp, #16]
  48 000e 0594     		str	r4, [sp, #20]
 226:Src/main.c    **** 
 227:Src/main.c    ****   /* GPIO Ports Clock Enable */
 228:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  49              		.loc 1 228 3 is_stmt 1 view .LVU3
  50              	.LBB2:
  51              		.loc 1 228 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 228 3 view .LVU5
  54 0012 0D4B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F01002 		orr	r2, r2, #16
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 228 3 view .LVU6
ARM GAS  /tmp/cc6prvUM.s 			page 6


  59 001c 1B6B     		ldr	r3, [r3, #48]
  60 001e 03F01003 		and	r3, r3, #16
  61 0022 0093     		str	r3, [sp]
  62              		.loc 1 228 3 view .LVU7
  63 0024 009B     		ldr	r3, [sp]
  64              	.LBE2:
 229:Src/main.c    **** 
 230:Src/main.c    ****   /*Configure GPIO pin Output Level */
 231:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_0, GPIO_PIN_RESET);
  65              		.loc 1 231 3 view .LVU8
  66 0026 094D     		ldr	r5, .L3+4
  67 0028 2246     		mov	r2, r4
  68 002a 0121     		movs	r1, #1
  69 002c 2846     		mov	r0, r5
  70 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
  71              	.LVL0:
 232:Src/main.c    **** 
 233:Src/main.c    ****   /*Configure GPIO pin : PE0 */
 234:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
  72              		.loc 1 234 3 view .LVU9
  73              		.loc 1 234 23 is_stmt 0 view .LVU10
  74 0032 0123     		movs	r3, #1
  75 0034 0193     		str	r3, [sp, #4]
 235:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  76              		.loc 1 235 3 is_stmt 1 view .LVU11
  77              		.loc 1 235 24 is_stmt 0 view .LVU12
  78 0036 0293     		str	r3, [sp, #8]
 236:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  79              		.loc 1 236 3 is_stmt 1 view .LVU13
  80              		.loc 1 236 24 is_stmt 0 view .LVU14
  81 0038 0394     		str	r4, [sp, #12]
 237:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  82              		.loc 1 237 3 is_stmt 1 view .LVU15
  83              		.loc 1 237 25 is_stmt 0 view .LVU16
  84 003a 0494     		str	r4, [sp, #16]
 238:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
  85              		.loc 1 238 3 is_stmt 1 view .LVU17
  86 003c 01A9     		add	r1, sp, #4
  87 003e 2846     		mov	r0, r5
  88 0040 FFF7FEFF 		bl	HAL_GPIO_Init
  89              	.LVL1:
 239:Src/main.c    **** 
 240:Src/main.c    **** }
  90              		.loc 1 240 1 is_stmt 0 view .LVU18
  91 0044 07B0     		add	sp, sp, #28
  92              	.LCFI2:
  93              		.cfi_def_cfa_offset 12
  94              		@ sp needed
  95 0046 30BD     		pop	{r4, r5, pc}
  96              	.L4:
  97              		.align	2
  98              	.L3:
  99 0048 00380240 		.word	1073887232
 100 004c 00100240 		.word	1073876992
 101              		.cfi_endproc
 102              	.LFE133:
 104              		.section	.text.StartDefaultTask,"ax",%progbits
ARM GAS  /tmp/cc6prvUM.s 			page 7


 105              		.align	1
 106              		.global	StartDefaultTask
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 110              		.fpu fpv4-sp-d16
 112              	StartDefaultTask:
 113              	.LFB134:
 241:Src/main.c    **** 
 242:Src/main.c    **** /* USER CODE BEGIN 4 */
 243:Src/main.c    **** 
 244:Src/main.c    **** /* USER CODE END 4 */
 245:Src/main.c    **** 
 246:Src/main.c    **** /* USER CODE BEGIN Header_StartDefaultTask */
 247:Src/main.c    **** /**
 248:Src/main.c    ****   * @brief  Function implementing the defaultTask thread.
 249:Src/main.c    ****   * @param  argument: Not used
 250:Src/main.c    ****   * @retval None
 251:Src/main.c    ****   */
 252:Src/main.c    **** /* USER CODE END Header_StartDefaultTask */
 253:Src/main.c    **** void StartDefaultTask(void const * argument)
 254:Src/main.c    **** {
 114              		.loc 1 254 1 is_stmt 1 view -0
 115              		.cfi_startproc
 116              		@ Volatile: function does not return.
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              	.LVL2:
 120              		.loc 1 254 1 is_stmt 0 view .LVU20
 121 0000 08B5     		push	{r3, lr}
 122              	.LCFI3:
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 3, -8
 125              		.cfi_offset 14, -4
 126              	.LVL3:
 127              	.L6:
 255:Src/main.c    **** 
 256:Src/main.c    ****   /* USER CODE BEGIN 5 */
 257:Src/main.c    ****   /* Infinite loop */
 258:Src/main.c    ****   for(;;)
 128              		.loc 1 258 3 is_stmt 1 discriminator 1 view .LVU21
 259:Src/main.c    ****   {
 260:Src/main.c    ****     osDelay(1);
 129              		.loc 1 260 5 discriminator 1 view .LVU22
 130 0002 0120     		movs	r0, #1
 131 0004 FFF7FEFF 		bl	osDelay
 132              	.LVL4:
 133 0008 FBE7     		b	.L6
 134              		.cfi_endproc
 135              	.LFE134:
 137              		.section	.text.StartTask02,"ax",%progbits
 138              		.align	1
 139              		.global	StartTask02
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc6prvUM.s 			page 8


 145              	StartTask02:
 146              	.LFB135:
 261:Src/main.c    ****   }
 262:Src/main.c    ****   /* USER CODE END 5 */
 263:Src/main.c    **** }
 264:Src/main.c    **** 
 265:Src/main.c    **** /* USER CODE BEGIN Header_StartTask02 */
 266:Src/main.c    **** /**
 267:Src/main.c    **** * @brief Function implementing the myTask02 thread.
 268:Src/main.c    **** * @param argument: Not used
 269:Src/main.c    **** * @retval None
 270:Src/main.c    **** */
 271:Src/main.c    **** /* USER CODE END Header_StartTask02 */
 272:Src/main.c    **** void StartTask02(void const * argument)
 273:Src/main.c    **** {
 147              		.loc 1 273 1 view -0
 148              		.cfi_startproc
 149              		@ Volatile: function does not return.
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              	.LVL5:
 153              		.loc 1 273 1 is_stmt 0 view .LVU24
 154 0000 08B5     		push	{r3, lr}
 155              	.LCFI4:
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 3, -8
 158              		.cfi_offset 14, -4
 159              	.LVL6:
 160              	.L9:
 274:Src/main.c    ****   /* USER CODE BEGIN StartTask02 */
 275:Src/main.c    ****   /* Infinite loop */
 276:Src/main.c    ****   for(;;)
 161              		.loc 1 276 3 is_stmt 1 discriminator 1 view .LVU25
 277:Src/main.c    ****   {
 278:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_0);
 162              		.loc 1 278 5 discriminator 1 view .LVU26
 163 0002 0121     		movs	r1, #1
 164 0004 0548     		ldr	r0, .L11
 165 0006 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 166              	.LVL7:
 279:Src/main.c    ****     HAL_Delay(500);
 167              		.loc 1 279 5 discriminator 1 view .LVU27
 168 000a 4FF4FA70 		mov	r0, #500
 169 000e FFF7FEFF 		bl	HAL_Delay
 170              	.LVL8:
 280:Src/main.c    ****     osDelay(1);
 171              		.loc 1 280 5 discriminator 1 view .LVU28
 172 0012 0120     		movs	r0, #1
 173 0014 FFF7FEFF 		bl	osDelay
 174              	.LVL9:
 175 0018 F3E7     		b	.L9
 176              	.L12:
 177 001a 00BF     		.align	2
 178              	.L11:
 179 001c 00100240 		.word	1073876992
 180              		.cfi_endproc
 181              	.LFE135:
ARM GAS  /tmp/cc6prvUM.s 			page 9


 183              		.section	.text.SystemClock_Config,"ax",%progbits
 184              		.align	1
 185              		.global	SystemClock_Config
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv4-sp-d16
 191              	SystemClock_Config:
 192              	.LFB132:
 180:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 193              		.loc 1 180 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 80
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 30B5     		push	{r4, r5, lr}
 198              	.LCFI5:
 199              		.cfi_def_cfa_offset 12
 200              		.cfi_offset 4, -12
 201              		.cfi_offset 5, -8
 202              		.cfi_offset 14, -4
 203 0002 95B0     		sub	sp, sp, #84
 204              	.LCFI6:
 205              		.cfi_def_cfa_offset 96
 181:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 206              		.loc 1 181 3 view .LVU30
 181:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 207              		.loc 1 181 22 is_stmt 0 view .LVU31
 208 0004 3022     		movs	r2, #48
 209 0006 0021     		movs	r1, #0
 210 0008 08A8     		add	r0, sp, #32
 211 000a FFF7FEFF 		bl	memset
 212              	.LVL10:
 182:Src/main.c    **** 
 213              		.loc 1 182 3 is_stmt 1 view .LVU32
 182:Src/main.c    **** 
 214              		.loc 1 182 22 is_stmt 0 view .LVU33
 215 000e 0024     		movs	r4, #0
 216 0010 0394     		str	r4, [sp, #12]
 217 0012 0494     		str	r4, [sp, #16]
 218 0014 0594     		str	r4, [sp, #20]
 219 0016 0694     		str	r4, [sp, #24]
 220 0018 0794     		str	r4, [sp, #28]
 186:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 221              		.loc 1 186 3 is_stmt 1 view .LVU34
 222              	.LBB3:
 186:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 223              		.loc 1 186 3 view .LVU35
 224 001a 0194     		str	r4, [sp, #4]
 186:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 225              		.loc 1 186 3 view .LVU36
 226 001c 1B4B     		ldr	r3, .L15
 227 001e 1A6C     		ldr	r2, [r3, #64]
 228 0020 42F08052 		orr	r2, r2, #268435456
 229 0024 1A64     		str	r2, [r3, #64]
 186:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 230              		.loc 1 186 3 view .LVU37
 231 0026 1B6C     		ldr	r3, [r3, #64]
ARM GAS  /tmp/cc6prvUM.s 			page 10


 232 0028 03F08053 		and	r3, r3, #268435456
 233 002c 0193     		str	r3, [sp, #4]
 186:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 234              		.loc 1 186 3 view .LVU38
 235 002e 019B     		ldr	r3, [sp, #4]
 236              	.LBE3:
 187:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 237              		.loc 1 187 3 view .LVU39
 238              	.LBB4:
 187:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 239              		.loc 1 187 3 view .LVU40
 240 0030 0294     		str	r4, [sp, #8]
 187:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 241              		.loc 1 187 3 view .LVU41
 242 0032 174B     		ldr	r3, .L15+4
 243 0034 1A68     		ldr	r2, [r3]
 244 0036 42F48042 		orr	r2, r2, #16384
 245 003a 1A60     		str	r2, [r3]
 187:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 246              		.loc 1 187 3 view .LVU42
 247 003c 1B68     		ldr	r3, [r3]
 248 003e 03F48043 		and	r3, r3, #16384
 249 0042 0293     		str	r3, [sp, #8]
 187:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 250              		.loc 1 187 3 view .LVU43
 251 0044 029B     		ldr	r3, [sp, #8]
 252              	.LBE4:
 190:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 253              		.loc 1 190 3 view .LVU44
 190:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 254              		.loc 1 190 36 is_stmt 0 view .LVU45
 255 0046 0225     		movs	r5, #2
 256 0048 0895     		str	r5, [sp, #32]
 191:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 257              		.loc 1 191 3 is_stmt 1 view .LVU46
 191:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 258              		.loc 1 191 30 is_stmt 0 view .LVU47
 259 004a 0123     		movs	r3, #1
 260 004c 0B93     		str	r3, [sp, #44]
 192:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 261              		.loc 1 192 3 is_stmt 1 view .LVU48
 192:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 262              		.loc 1 192 41 is_stmt 0 view .LVU49
 263 004e 1023     		movs	r3, #16
 264 0050 0C93     		str	r3, [sp, #48]
 193:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 265              		.loc 1 193 3 is_stmt 1 view .LVU50
 193:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 266              		.loc 1 193 34 is_stmt 0 view .LVU51
 267 0052 0E95     		str	r5, [sp, #56]
 194:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 268              		.loc 1 194 3 is_stmt 1 view .LVU52
 194:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 269              		.loc 1 194 35 is_stmt 0 view .LVU53
 270 0054 0F94     		str	r4, [sp, #60]
 195:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 271              		.loc 1 195 3 is_stmt 1 view .LVU54
ARM GAS  /tmp/cc6prvUM.s 			page 11


 195:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 272              		.loc 1 195 30 is_stmt 0 view .LVU55
 273 0056 0823     		movs	r3, #8
 274 0058 1093     		str	r3, [sp, #64]
 196:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 275              		.loc 1 196 3 is_stmt 1 view .LVU56
 196:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 276              		.loc 1 196 30 is_stmt 0 view .LVU57
 277 005a A823     		movs	r3, #168
 278 005c 1193     		str	r3, [sp, #68]
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 279              		.loc 1 197 3 is_stmt 1 view .LVU58
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 280              		.loc 1 197 30 is_stmt 0 view .LVU59
 281 005e 1295     		str	r5, [sp, #72]
 198:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 282              		.loc 1 198 3 is_stmt 1 view .LVU60
 198:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 283              		.loc 1 198 30 is_stmt 0 view .LVU61
 284 0060 0423     		movs	r3, #4
 285 0062 1393     		str	r3, [sp, #76]
 199:Src/main.c    ****   {
 286              		.loc 1 199 3 is_stmt 1 view .LVU62
 199:Src/main.c    ****   {
 287              		.loc 1 199 7 is_stmt 0 view .LVU63
 288 0064 08A8     		add	r0, sp, #32
 289 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 290              	.LVL11:
 205:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 291              		.loc 1 205 3 is_stmt 1 view .LVU64
 205:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 292              		.loc 1 205 31 is_stmt 0 view .LVU65
 293 006a 0F23     		movs	r3, #15
 294 006c 0393     		str	r3, [sp, #12]
 207:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 295              		.loc 1 207 3 is_stmt 1 view .LVU66
 207:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 296              		.loc 1 207 34 is_stmt 0 view .LVU67
 297 006e 0495     		str	r5, [sp, #16]
 208:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 298              		.loc 1 208 3 is_stmt 1 view .LVU68
 208:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 299              		.loc 1 208 35 is_stmt 0 view .LVU69
 300 0070 0594     		str	r4, [sp, #20]
 209:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 301              		.loc 1 209 3 is_stmt 1 view .LVU70
 209:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 302              		.loc 1 209 36 is_stmt 0 view .LVU71
 303 0072 4FF4A053 		mov	r3, #5120
 304 0076 0693     		str	r3, [sp, #24]
 210:Src/main.c    **** 
 305              		.loc 1 210 3 is_stmt 1 view .LVU72
 210:Src/main.c    **** 
 306              		.loc 1 210 36 is_stmt 0 view .LVU73
 307 0078 4FF48053 		mov	r3, #4096
 308 007c 0793     		str	r3, [sp, #28]
 212:Src/main.c    ****   {
ARM GAS  /tmp/cc6prvUM.s 			page 12


 309              		.loc 1 212 3 is_stmt 1 view .LVU74
 212:Src/main.c    ****   {
 310              		.loc 1 212 7 is_stmt 0 view .LVU75
 311 007e 0521     		movs	r1, #5
 312 0080 03A8     		add	r0, sp, #12
 313 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 314              	.LVL12:
 216:Src/main.c    **** 
 315              		.loc 1 216 1 view .LVU76
 316 0086 15B0     		add	sp, sp, #84
 317              	.LCFI7:
 318              		.cfi_def_cfa_offset 12
 319              		@ sp needed
 320 0088 30BD     		pop	{r4, r5, pc}
 321              	.L16:
 322 008a 00BF     		.align	2
 323              	.L15:
 324 008c 00380240 		.word	1073887232
 325 0090 00700040 		.word	1073770496
 326              		.cfi_endproc
 327              	.LFE132:
 329              		.section	.text.main,"ax",%progbits
 330              		.align	1
 331              		.global	main
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu fpv4-sp-d16
 337              	main:
 338              	.LFB131:
 102:Src/main.c    ****   /* USER CODE BEGIN 1 */
 339              		.loc 1 102 1 is_stmt 1 view -0
 340              		.cfi_startproc
 341              		@ Volatile: function does not return.
 342              		@ args = 0, pretend = 0, frame = 40
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344 0000 00B5     		push	{lr}
 345              	.LCFI8:
 346              		.cfi_def_cfa_offset 4
 347              		.cfi_offset 14, -4
 348 0002 8BB0     		sub	sp, sp, #44
 349              	.LCFI9:
 350              		.cfi_def_cfa_offset 48
 110:Src/main.c    **** 
 351              		.loc 1 110 3 view .LVU78
 352 0004 FFF7FEFF 		bl	HAL_Init
 353              	.LVL13:
 117:Src/main.c    **** 
 354              		.loc 1 117 3 view .LVU79
 355 0008 FFF7FEFF 		bl	SystemClock_Config
 356              	.LVL14:
 124:Src/main.c    ****   /* USER CODE BEGIN 2 */
 357              		.loc 1 124 3 view .LVU80
 358 000c FFF7FEFF 		bl	MX_GPIO_Init
 359              	.LVL15:
 143:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 360              		.loc 1 143 3 view .LVU81
ARM GAS  /tmp/cc6prvUM.s 			page 13


 361 0010 0D4C     		ldr	r4, .L20
 362 0012 05AD     		add	r5, sp, #20
 363 0014 2646     		mov	r6, r4
 364 0016 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 365 0018 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 366 001a 3368     		ldr	r3, [r6]
 367 001c 2B60     		str	r3, [r5]
 144:Src/main.c    **** 
 368              		.loc 1 144 3 view .LVU82
 144:Src/main.c    **** 
 369              		.loc 1 144 23 is_stmt 0 view .LVU83
 370 001e 0021     		movs	r1, #0
 371 0020 05A8     		add	r0, sp, #20
 372 0022 FFF7FEFF 		bl	osThreadCreate
 373              	.LVL16:
 144:Src/main.c    **** 
 374              		.loc 1 144 21 view .LVU84
 375 0026 094B     		ldr	r3, .L20+4
 376 0028 1860     		str	r0, [r3]
 147:Src/main.c    ****   myTask02Handle = osThreadCreate(osThread(myTask02), NULL);
 377              		.loc 1 147 3 is_stmt 1 view .LVU85
 378 002a 6D46     		mov	r5, sp
 379 002c 1434     		adds	r4, r4, #20
 380 002e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 381 0030 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 382 0032 2368     		ldr	r3, [r4]
 383 0034 2B60     		str	r3, [r5]
 148:Src/main.c    **** 
 384              		.loc 1 148 3 view .LVU86
 148:Src/main.c    **** 
 385              		.loc 1 148 20 is_stmt 0 view .LVU87
 386 0036 0021     		movs	r1, #0
 387 0038 6846     		mov	r0, sp
 388 003a FFF7FEFF 		bl	osThreadCreate
 389              	.LVL17:
 148:Src/main.c    **** 
 390              		.loc 1 148 18 view .LVU88
 391 003e 044B     		ldr	r3, .L20+8
 392 0040 1860     		str	r0, [r3]
 160:Src/main.c    **** 
 393              		.loc 1 160 3 is_stmt 1 view .LVU89
 394 0042 FFF7FEFF 		bl	osKernelStart
 395              	.LVL18:
 396              	.L18:
 166:Src/main.c    ****   {
 397              		.loc 1 166 3 discriminator 1 view .LVU90
 171:Src/main.c    ****   /* USER CODE END 3 */
 398              		.loc 1 171 3 discriminator 1 view .LVU91
 399 0046 FEE7     		b	.L18
 400              	.L21:
 401              		.align	2
 402              	.L20:
 403 0048 00000000 		.word	.LANCHOR0
 404 004c 00000000 		.word	defaultTaskHandle
 405 0050 00000000 		.word	myTask02Handle
 406              		.cfi_endproc
 407              	.LFE131:
ARM GAS  /tmp/cc6prvUM.s 			page 14


 409              		.section	.text.Error_Handler,"ax",%progbits
 410              		.align	1
 411              		.global	Error_Handler
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 415              		.fpu fpv4-sp-d16
 417              	Error_Handler:
 418              	.LFB136:
 281:Src/main.c    ****   }
 282:Src/main.c    ****   /* USER CODE END StartTask02 */
 283:Src/main.c    **** }
 284:Src/main.c    **** 
 285:Src/main.c    **** /**
 286:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 287:Src/main.c    ****   * @retval None
 288:Src/main.c    ****   */
 289:Src/main.c    **** void Error_Handler(void)
 290:Src/main.c    **** {
 419              		.loc 1 290 1 view -0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 291:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 292:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 293:Src/main.c    **** 
 294:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 295:Src/main.c    **** }
 424              		.loc 1 295 1 view .LVU93
 425 0000 7047     		bx	lr
 426              		.cfi_endproc
 427              	.LFE136:
 429              		.comm	myTask02Handle,4,4
 430              		.comm	defaultTaskHandle,4,4
 431              		.section	.rodata
 432              		.align	2
 433              		.set	.LANCHOR0,. + 0
 434              	.LC4:
 435 0000 0C000000 		.word	.LC0
 436 0004 00000000 		.word	StartDefaultTask
 437 0008 0000     		.short	0
 438 000a 0000     		.space	2
 439 000c 00000000 		.word	0
 440 0010 80000000 		.word	128
 441              	.LC5:
 442 0014 00000000 		.word	.LC2
 443 0018 00000000 		.word	StartTask02
 444 001c 0000     		.short	0
 445 001e 0000     		.space	2
 446 0020 00000000 		.word	0
 447 0024 80000000 		.word	128
 448              		.section	.rodata.str1.4,"aMS",%progbits,1
 449              		.align	2
 450              	.LC2:
 451 0000 6D795461 		.ascii	"myTask02\000"
 451      736B3032 
ARM GAS  /tmp/cc6prvUM.s 			page 15


 451      00
 452 0009 000000   		.space	3
 453              	.LC0:
 454 000c 64656661 		.ascii	"defaultTask\000"
 454      756C7454 
 454      61736B00 
 455              		.text
 456              	.Letext0:
 457              		.file 2 "/home/faoziaziz/Installer/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-201
 458              		.file 3 "/home/faoziaziz/Installer/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-201
 459              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 460              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 461              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 462              		.file 7 "/home/faoziaziz/Installer/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-201
 463              		.file 8 "/home/faoziaziz/Installer/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-201
 464              		.file 9 "/home/faoziaziz/Installer/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-201
 465              		.file 10 "/home/faoziaziz/Installer/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-20
 466              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 467              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 468              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 469              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 470              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 471              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 472              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 473              		.file 18 "<built-in>"
ARM GAS  /tmp/cc6prvUM.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc6prvUM.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc6prvUM.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc6prvUM.s:99     .text.MX_GPIO_Init:0000000000000048 $d
     /tmp/cc6prvUM.s:105    .text.StartDefaultTask:0000000000000000 $t
     /tmp/cc6prvUM.s:112    .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/cc6prvUM.s:138    .text.StartTask02:0000000000000000 $t
     /tmp/cc6prvUM.s:145    .text.StartTask02:0000000000000000 StartTask02
     /tmp/cc6prvUM.s:179    .text.StartTask02:000000000000001c $d
     /tmp/cc6prvUM.s:184    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc6prvUM.s:191    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc6prvUM.s:324    .text.SystemClock_Config:000000000000008c $d
     /tmp/cc6prvUM.s:330    .text.main:0000000000000000 $t
     /tmp/cc6prvUM.s:337    .text.main:0000000000000000 main
     /tmp/cc6prvUM.s:403    .text.main:0000000000000048 $d
                            *COM*:0000000000000004 defaultTaskHandle
                            *COM*:0000000000000004 myTask02Handle
     /tmp/cc6prvUM.s:410    .text.Error_Handler:0000000000000000 $t
     /tmp/cc6prvUM.s:417    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc6prvUM.s:432    .rodata:0000000000000000 $d
     /tmp/cc6prvUM.s:449    .rodata.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
osDelay
HAL_GPIO_TogglePin
HAL_Delay
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
osThreadCreate
osKernelStart
